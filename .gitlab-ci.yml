image: docker

variables:
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive
  ADAPT_RUN_LONG_TESTS: 1
  ADAPT_TEST_HEAPDUMP: 1
  # This is for certs to be shared between docker client and dind. Must match
  # a volume mount path in gitlab runner's config.toml.
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - name: docker:stable-dind
    command: [ "dockerd", "--host=unix:///var/run/docker.sock", "--host=tcp://0.0.0.0:2376", "--host=tcp://0.0.0.0:2375", "--storage-driver=overlay2" ]

stages:
  - test
  - release
  - publish

before_script:
  - apk update && apk add bash git
  - ./bin/dnsmasq
  - |
    if [ "${DOCKER_AUTH_CONFIG}" = "" ]; then
      echo No DOCKER_AUTH_CONFIG CI variable set in Gitlab web UI
      exit 1
    fi
  - . ./bin/setup-docker-auth.sh

test:
  stage: test
  only:
    - branches
    - web
  script:
    - ./bin/make build check-uncommitted lint web-test coverage

release:
  stage: release
  only:
    # Only run the release job if:
    # - the pipeline was kicked off manually
    # - ADAPT_RELEASE_TYPE is set (during manual trigger)
    refs:
      - web
    variables:
      - $ADAPT_RELEASE_TYPE
  variables:
    ADAPT_RELEASE_TESTS: 1
  script:
    # Confirm correct setup:
    # - there's a GitLab personal access token in the environment (token must
    #   have write access to the adapt repo)
    # - there's an NPM token in the enviroment (token must have write
    #   access to publish the Adapt packages)
    - |
      if [ -z "${ADAPT_WEB_TOKEN}" ]; then printf "\n\nERROR: ADAPT_WEB_TOKEN must be set\n\n"; exit 1; fi
      if [ -z "${ADAPT_NPM_TOKEN}" ]; then printf "\n\nERROR: ADAPT_NPM_TOKEN must be set\n\n"; exit 1; fi
    - ./scripts/ci/checkout_branch.sh
    - ./bin/make release

docs:
  stage: publish
  only:
    refs:
      - master@unboundedsystems/adapt
    # Only run the publish job if there's a personal access token in the
    # environment. The token must have write access to the adapt-web repo.
    variables:
      - $ADAPT_WEB_TOKEN
  script:
    - ./bin/make web-release-master
