#!/usr/bin/env node

process.env.NODE_NO_WARNINGS = '1';

process.on('unhandledRejection', (reason) => {
    console.warn("WARNING: Unhandled error:", reason);
});

require('source-map-support').install();

/* We use our own version of plugin-help, but in order for it to work fully,
 * @oclif/command must also use it. So this little bit of ugliness is to
 * force an unmodified version of @oclif/command to load
 * @unboundedsystems/plugin-help instead of @oclif/plugin-help.
 */
const proxyquire = require('proxyquire');
const helpPlugin = require('@unboundedsystems/plugin-help');
const stubs = {
    '@oclif/plugin-help': {
        ...helpPlugin,
        '@global': true,
        '@noCallThru': true,
    }
};

proxyquire('@oclif/command', stubs).run()
.then(require('@oclif/command/flush'))
.catch((err) => {
    // Normal successful exit in Oclif is via a specific exception with
    // exit code 0. But their use of instanceof to detect the exception is
    // buggy and results in extraneous output upon success sometimes. This
    // works around that bug.
    if (err && err.oclif && err.oclif.exit === 0) return;
    require('@oclif/errors/handle')(err);
});
